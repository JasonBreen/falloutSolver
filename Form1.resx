<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAC/ekH/v3pB/796Qf+/ekH/vnlB/715QP/CfUP/r2w3/2hXPv+uoHz/lodn/6aXdP/QvZL/zruQ/5eJ
        af8rJx7/rp55/5aIaP9zaE//Uko+/5KAfv/kysT/5crD/9vBu//cw7z/3sS9/9/Fvv/fxb7/38W+/9/F
        vv/fxb7/38W+/796Qf+/ekH/v3pB/8B7Qf/FfkP/xX5D/9GFR/9rRib/X1pH/5OFZv92a1L/0L2R/8az
        iv9/c1n/My4k/4h8X/+5qIH/JiIa/4V4XP9fVkH/hnpd/4BzZv/Ksqz/79PL/+zQyf/jycL/3MK7/9/F
        vv/fxb7/38W+/9/Fvv/fxb7/v3pB/796Qf/Ae0H/u3hA/6VpOP+cZDX/pGg3/0gwHP+Ad13/OTMn/15W
        Qv9wZ03/dm1S/zUwJf8ODQr/fHBW/yYiGv9dVEH/ODIn/4Z5Xf/s1qX/p5hy/05GOv+biIX/mIaC/8ix
        qv/v08z/3cO8/9/Fvv/fxb7/3sS9/93Evf+/ekH/vnpB/8F7Qv+4dj//WDge/0UsF/89JRL/LiMX/72s
        hf9rYUr/koRm/7acg/+HdWH/hnpe/3huU/80LyT/Ih8Y/yckG/9oXkj/69Wk/6aXdP97cFf/OjQo/xMR
        Dv9zaU//MS0n/5aFgf/kysP/3cO8/+HGv//nzMT/5crD/796Qf+/ekH/v3pB/8F7Qv/Gf0T/x39E/8yB
        Q/9gRCn/t6uD/414Zf9LaSD/dr0o/4SQUP+Th2f/s5qB/31yV/9cVT//bGJL/+LNnv+xoXz/h3pd/6WV
        cv9RSTn/jH9i/2BUPf8wKBn/FxQO/8avqf/329P/TUZD/0M7Of/Ptq//v3pB/796Qf+/ekH/v3pB/755
        QP+8eUH/wnk//3tbOv9xbFP/QzUx/1FqJv+A/wz/cfEI/2jVDP9jiSz/oY1z/62Vff+FeV3/qJl1/3Fm
        T/+GeV3/hXhd/3hsU/9zaVH/MDxC/01aXP84Q0X/PTc2/412b/8wMjP/X3uF/0lBP/++eUH/v3pB/796
        Qf+/ekH/vnpB/7t3QP/FfkP/j1sw/zg1Kf+fjnL/amxE/3brDv+G/xX/hP8T/3v6DP9nyw//eJ47/6GT
        cP9TSzr/c2hP/4l8X/9jWkb/gnNU/1hjYv/D7fz/w+v3/8Xt+v+Orbj/P05T/5m4wv+Qrrf/DAoJ/8J8
        Qv++eUH/v3pB/714QP/CfUT/zIRI/8yDRv/Th0n/mV8w/zovHv89Mi3/bLMg/33/Df+G/hP/gv4U/4P+
        E/93/wT/Z6og/2pYTv81MiT/WVE+/2FYQ/92ak//iKez/8bt+f+33Oj/uN7q/8fv/P+kxc//U2Rp/xwi
        JP8hJyn/o2g3/8V+RP+7dz//yoJH/7RuNv9+SSD/akEg/3RHI/9mORj/Wn17/2GDgP8uJBz/M0kP/12z
        D/9++Q//hv4U/4b/Ev971x//cWNR/xkYEf8JCQf/cWVM/2hlVf+kytj/vuTw/7rg7P+64Oz/v+Xy/3aO
        lv9nfIL/lbS9/yw0N/80IRL/wHpB/82ER/+FTiT/OT01/1mCgv9woqP/fbS0/3Spqv+SycX/nNfT/4u/
        vP9RVlX/FAoe/yM4Ff9RmQz/dOwN/3XnDv92b1D/Ih0X/yUjGv97bE//XWRe/8Tu/f/A5fD/ut/q/7fc
        6P+94+//mLfB/2N2fP85RUj/Cw0O/25lZf9XNhn/llss/zVKSv+b2tn/r+3o/6/u6f9mjIj/PU9P/zhG
        Sf8YHh//IzMx/3mqpP9ehYv/JDJT/woKLv89SCH/fcIv/3V4TP9pXUv/eW5U/4p9X/8wMCv/d5CY/6zT
        4f/A6vj/x/D7/834//+SsLr/X3Z9/0ldY/9pX1v/7tPL/2tdWv8JCwn/n9rY/6rm4f+e2dX/QVlY/09d
        Y/+mxtH/ocLM/3mSmv9IU1n/LDY3/4a4sf+Eu7b/Licb/0cxIv9ANDL/Ukcz/zgyJf9CPTD/YllE/0RB
        Mv8eGxP/OC4l/1tdWP9ca3r/cIGO/3KJjf9lbm7/kX95/+bLw//exL3/69DJ/25iXv81Tkz/o+Lf/2eN
        i/9GUlj/tNnl/8Pr9/+94+//xe76/8v1//+12eX/dIqS/zdQUv82Kxz/tnM7/5dhMf+oaTb/lV4w/3lM
        J/+QXDL/W0Ms/4JWMv/PgkD/TCkR/3R7V/+spoD/uJac/963v//u0cz/3sS9/97Evf/exL3/79LL/4dy
        bf81Pz3/GCIi/zlESP+dvcf/vuTw/7nf6/+33Oj/t9zo/8Xt+f/M9f//nrvF/w4YHf9wRSL/45JP/9CG
        Sf/ViUr/2IpK/9GFRv/HfD7/s3A0/187Hf+RdIb/tvli/4r/G/+h+UX/vdx//9jFs//fxb//38W+/97E
        vf/Yv7j//+ff/3tpY/8gKy7/t9zn/8Pr9/+53ur/ud7q/8Xt+f+84+//Ynd+/56/yf/V////j6+6/yEY
        D/9qQiH/ZD0d/2ZBHv9lQSD/YkIl/11GMP9oUlX/opeM/8Lmf//ZxrT/0cum/73Xgf+92YD/0c2k/+DE
        wP/exL3/4cfA//DVzf+njof/IiUm/7DV4f/C6fX/ud7q/7/m8v/B6ff/mr7L/2N5gP86Q0X/ZXqA/57C
        z//Q+///UmZr/05EQ/+ilJH/noiR/6yWnP++pqz/1bq+/9rYrf/h1rP/jfMr/4z2KP/cx7n/6r7T/+TC
        x//hxML/38W+/+LIwf/Yvrf/WE5M/ztFR/+Mq7T/xe35/7vh7f+sz9r/iaWu/4ifpP+IiH//urOj/8XA
        r/+wqpr/k5OK/3aEhv95l6D/W1VQ//vW1//I5Ij/zeGQ/77leP/I14//metB/6DnTv/owM3/pOhU/432
        Kf/RzaT/4cTC/97GvP/fxb7/79TM/2dZVf9WcHj/zPb//8Dn8/+33en/w+r2/5u8xv8YGBf/oJuO/6ms
        ov+Rn57/l66z/562uv+qu7v/TU5K/2+Jkf9PW1z/yaWr/5H4MP+y22//peVW/6DpTP/Wy63/fP4M/8zQ
        nP/svtX/ydKV/6/hZ//ZybP/4MTA/9/Fvf/my8P/QDo4/6LFzf/F7Pn/u+Ds/7rg7P+74Oz/v+by/2V4
        f/9NXGH/qM/c/7jh7/+u0+D/uuLu/7/p+P+gw8//wOfz/1VnbP+rkY3/m/83/8vOnP+82n7/kPQu/+y+
        1f+s42L/l+88/+TCyP/jw8X/4MW//9rItf/gxb//38W+//DVzv9qWlX/Vm10/7vh7f+sz9r/vuTw/7rg
        7P+94+//wen1/7LX4v+/5fH/x+/7/3CGjf9HVVr/wefz/7vg6//L9P//YHR9/5mHev+r+VP/28S5/8vR
        mf+L9yX/3ce6/+PDxv+d7Eb/ydKV/+PDxf/exrz/4MTA/9/Fvv/fxb7/79TM/1VIRP8+T1T/e5Sc/4ml
        rf/D6vb/ut/r/7rf6//B6PT/w+r3/7jd6f/C6fb/pMXO/yUsL/+84u7/wOfz/8fv/P9jd4H/mIt3/83l
        kf/hwcP/2cmz/4/0Lf/UzKn/5cLI/9XLrP+82n7/4sPD/97Fvf/fxb7/38W+/9/Fvv/Ksqv/GhoZ/ztK
        Tv9VZ23/lbS+/8Dn9P+43ur/wur2/4qnr/+Us7z/wOfz/8bu+/9abHL/jqu0/6vN2P+SsLn/zPb//1lp
        b/+xmpD/59DE/93EvP/jwsb/oOtK/8vRmv/jw8X/4MTA/9zHuf/exrv/38W//9/Fvv/fxb7/38W+/413
        cv8mVVL/VnF1/09cYv+Us73/wej0/7fd6P/I8P3/OENH/15xd//R/P//mbjC/2V6gf/X////UGFm/0FN
        Uf/K9v//U1la/9S3sP/iyML/3cW7/+bByv+43Hf/xtSP/+XCyP/exrv/4MW//9/Fvv/fxb7/38W+/9/F
        vv/fxb7/XEtI/0+uqv9fqqj/S1NZ/5GvuP/B6PX/uN3p/8rz//+WtL7/oMHL/8Xt+f+jxc//q87Z/8bu
        +/+Qrbb/lrS9/5zAzP9oXFn/79PL/9zCu//fxb3/4sPD/9HNpf/N0J3/4sPE/97Fvf/fxb7/38W+/9/F
        vv/fxb7/38W+/9/Fvv9KREH/Wr+7/4T///86dXP/bH6F/8Xv+/+74e3/c4qS/6bI0//D6vf/ud7q/7/m
        8v++5PH/ud/r/6zQ2//G7Pn/XXuA/zhFQf/ewbv/4MfA/97Fvv/fxb7/38W+/97GvP/fxb7/38W+/9/F
        vv/fxb7/38W+/9/Fvv/fxb7/38W+/0xGQ/9ex8P/ceTf/0FkZf+kw87/vOTw/8fx/v9/maH/ICcp/6/S
        3v+94+//t93o/73j7/+w1OD/TFxh/11ja/9BdnX/R5CO/6+Qi//p0Mn/3cO8/9/Fvv/fxb7/38W+/9/F
        vv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/ZlJP/1Sxrv9Trqn/S1JY/9f///+62+j/qsbS/8jw
        9v+x1uD/uN3p/8Ps+f/D7Pj/u+Pv/8Tq9/9mfoT/S5OQ/06koP8rPTv/yq6o/+TKw//exL3/38W+/9/F
        vv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv+6nJb/MVVT/3fy7f8mRkX/SFld/1yL
        jf9IhoP/Vmht/8Lp9f/E7Pj/lq+5/5Ott//C5PH/coWN/0mblv+J////d/bz/1Bva//cu7T/4MjB/9/F
        vv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+//DVzv96ZmL/O46L/4H/
        /f9fyML/b+ji/4D//v9BiYb/HiAi/zdCRf88eHX/T52a/0lvcf9Uo6D/fPn2/1fCvf97/Pf/ToqI/8Gh
        mv/mzcb/3sS9/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/3sW+/+bL
        xP9qXFj/R5KP/4T///937Of/derm/3/9+f9Traj/VbSv/4L//v+C/v3/e/jy/3j18/9JeHT/Z1dU/zNk
        Yv9La2j/27q0/+DHwP/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/F
        vv/exL3/3sW+//LUzP+LeXT/UK2p/4L///969fD/du3o/3369v+B//z/aNPP/1/Jxf9m3Nf/OWNh/7aX
        kf/u0cn/Rjo4/7Kblf/pzsb/3cO8/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/F
        vv/fxb7/38W+/9/Fvv/exL3/3cW+/+fJwv9TUk7/M3Fv/2HBvP937un/d+/q/2/i3f8kNzX/TkxJ/2pu
        av+wlI//7dPM/9G6s//YwLn/6c7H/93DvP/fxb7/38W+/9/Fvv/fxb7/38W+/9/Fvv/fxb7/38W+/9/F
        vv/fxb7/38W+/9/Fvv/fxb7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>